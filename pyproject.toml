[tool.poetry]
name = "hades"
version = "0.1.0"
description = "Heterogeneous Adaptive Dimensional Embedding System - Production infrastructure for processing and serving embedded knowledge"
authors = ["HADES Team"]
readme = "README.md"
license = "Apache-2.0"
# Installable packages from this repo
packages = [
    { include = "core" },
]

[tool.poetry.dependencies]
python = "^3.12"
python-arango = "^7.6.0"
numpy = "^1.24.0"
torch = "^2.0.0"
transformers = "^4.35.0"
tqdm = "^4.65.0"
pypdfium2 = "^4.18.0"
pillow = "^10.0.0"
python-magic = "^0.4.27"
docling = "^1.0.0"
pandas = "^2.0.0"
lmdb = "^1.4.0"
sentence-transformers = "^4.1.0"
matplotlib = "^3.7.0"
httpx = "^0.24.0"
pyyaml = "^6.0"
defusedxml = "^0.7.1"
# mcp = { version = "^0.1.0", optional = true }  # Uncomment when MCP is available
aiofiles = "^23.0.0"
einops = "^0.8.1"
orjson = "^3.11.1"
gputil = "^1.4.0"
flash-attn = "^2.5.0"  # For 2-4x speedup on attention operations
tenacity = "^9.1.2"
ray = "^2.48.0"
peft = "^0.17.0"
structlog = "^25.4.0"
pymupdf = "^1.26.4"
psycopg = {version = "^3.1.18", extras = ["binary"]}
sqlalchemy = "^2.0.31"
alembic = "^1.13.2"
h2 = "^4.3.0"
faiss-gpu = "^1.8.0"

[tool.poetry.group.dev.dependencies]
mypy = "^1.5.0"
black = "^23.0.0"
ruff = "^0.1.0"
pytest = "^7.0.0"
pytest-asyncio = "^0.21.0"
types-tqdm = "*"
types-pillow = "*"

# [tool.poetry.extras]
# mcp = ["mcp"]
grpcio = "^1.75.0"
grpcio-tools = "^1.75.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.mypy]
python_version = "3.11"
# Start permissive to not break anything
ignore_missing_imports = true
allow_untyped_defs = true
allow_untyped_calls = true
allow_incomplete_defs = true
check_untyped_defs = false

# Warnings only - won't fail
warn_return_any = false
warn_unused_configs = false
warn_redundant_casts = false
warn_unused_ignores = false
warn_no_return = true
warn_unreachable = true

# Can gradually enable stricter checking later
# strict = true  # Uncomment when ready

# Exclude directories that don't need typing
exclude = [
    "tests/",
    "dev-utils/",
    "Acheron/",
    "setup/"
]

# Per-module options
[[tool.mypy.overrides]]
module = "transformers.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "torch.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "arango.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "tqdm.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "numpy.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "pypdfium2.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "PIL.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "yaml"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "psycopg.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "sqlalchemy.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "alembic.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "sickle.*"
ignore_missing_imports = true

[tool.ruff]
target-version = "py311"
line-length = 120
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501", # line too long (handled by formatter)
    "B008", # do not perform function calls in argument defaults
]
extend-exclude = [
    "core/database/arango/go_service/python/proto",
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.black]
line-length = 120
target-version = ["py311"]
